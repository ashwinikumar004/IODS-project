with(subset(res, padj<.01 ), points(mean_diff, -log10(pval), pch=20, col="red"))
with(subset(res, padj<.05 ), points(mean_diff, -log10(pval), pch=20, col="red"))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .1, "red", "black" ) )
with(res, plot(mean_diff, -log10(pval), pch=20, main="Volcano plot"))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .01, "red", "black" ) )
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ) )
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ), xlim = c(40,40) )
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ), xlim = c(-40, 40 )
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ), xlim = c(-40, 40 ))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ), xlim = c(-40, 40 ))
res <- read.csv("sDSS_result_drug-mutation.csv")
head(res)
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ), xlim = c(-40, 40 ))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .05, "red", "black" ), xlim = c(-15, 15 ), ylim = c(0,8))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .01, "red", "black" ), xlim = c(-15, 15 ), ylim = c(0,8))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .01, "red", "black" ), xlim = c(-20, 20), ylim = c(0,8))
res$mean_diff <- (res$mean_mut - res$mean_nonmut)
max(res$mean_diff)
min(res$mean_diff)
res <- read.csv("Resuls_NA_removed.csv")
head(res)
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$padj < .01, "red", "black" ), xlim = c(-20, 20), ylim = c(0,8))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pav < .01, "red", "black" ), xlim = c(-20, 20), ylim = c(0,8))
head(res)
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pval < .01, "red", "black" ), xlim = c(-20, 20), ylim = c(0,8))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pval < .01, "red", "black" ), xlim = c(-20, 20), ylim = c(0,5))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pval < .01, "red", "black" ), xlim = c(-20, 40), ylim = c(0,5))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pval < .01, "red", "black" ), xlim = c(-40, 40), ylim = c(0,5))
install.packages("library(calibrate)
")
install.packages(calibrate)
install.packages("calibrate")
library(calibrate)
ppp <- res[res$pval < .01]
ppp <- (res$pval < .01)
dim(ppp)
pp
ppp
res <- read.csv("Resuls_NA_removed.csv")
head(res)
res$mean_diff <- (res$mean_mut - res$mean_nonmut)
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pval < .005, "red", "black" ), xlim = c(-40, 40), ylim = c(0,5))
plot( res$mean_mut - res$mean_nonmut, -log10( res$pval ),
col = ifelse( res$pval < .005, "red", "black" ),
xlim = c(-40, 40), ylim = c(0,5), xlab = "Mean difference", ylab = "-log10 pvalue")
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
f1 <- function(x){
if(isTRUE(any(x>5|x< -5))){
return(1)
}else{return(0)}
}
med <- apply(sdss,1,f1)
sdss1 <- sdss[med == 1,]
dim(sdss1)
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss )
my_annotation
dim(sdss1)
anno <- read.csv("patient_annotation.csv", stringsAsFactors = F, row.names = 1)
anno[1:5,1:5]
anno[1:5,1:4]
anno[1:5,1:3]
unique(anno$Disease_status)
dia <- filter(anno$Disease_status == "Diagnosis" )
dia <- (anno$Disease_status == "Diagnosis" )
dia
dia <- select(anno$Disease_status == "Diagnosis" )
dia <- (anno$Disease_status == "Diagnosis" )
anno <- anno[, dia]
anno <- anno[dia,]
dim(anno)
head(anno)
sdss <- read.csv("sDSS_filtered.Drugs_451.csv", stringsAsFactors = F, row.names = 1)
anno <- read.csv("patient_annotation.csv", stringsAsFactors = F, row.names = 1)
dia <- (anno$Disease_status == "Diagnosis" )
anno <- anno[dia,]
samples <- sort(intersect(colnames(sdss), rownames(anno)))
samples
sdss <- sdss[, samples]
dim(sdss)
sdss1 <- sdss[, samples]
dim(sdss1)
cor2 <- rcorr(as.matrix(t(sdss1)), type="pearson")
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss )
my_ann_colors = list(
Drug_classes = c("X. Other" = "#F781F3",
"B. Kinase inhibitor" = "#585858",
"A. Conv. Chemo" = "#04B404",
"D. Immunomodulatory" = "#FF8000",
"E. Differentiating/ epigenetic modifier" = "#0B610B",
"H. Metabolic modifier" = "#FFBF00",
"F. Hormone therapy" = "#FF0000",
"J. NSAID" = "#5F4C0B",
"C. Rapalog" = "#0000FF",
"G. Apoptotic modulator" = "#8A0808",
"K. HSP inhibitor" = "#00BFFF",
"I. Kinesin inhibitor" = "#81F7F3"))
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss1 )
minval <- -1;
maxval <- 1;
pairs.breaks <- c(seq(minval, maxval, length.out=257))
pheatmap(cor2$r, fontsize = 8,
color = colorRampPalette(c("blue", "white" ,"red"))(256),
breaks = pairs.breaks,
annotation_col = my_annotation,
annotation_row = my_annotation,
annotation_colors = my_ann_colors,
border_color = NA,
lustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
filename = "P.sdss_pheatmap_complete.pdf", height = 40, width = 40)
annotation <- read.csv("patient_annotation.csv", stringsAsFactors = F, row.names = 1)
dia <- (annotation$Disease_status == "Diagnosis" )
annotation <- annotation[dia,]
samples <- sort(intersect(colnames(sdss), rownames(annotation)))
sdss1 <- sdss[, samples]
dim(sdss1)
cor2 <- rcorr(as.matrix(t(sdss1)), type="pearson")
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
my_annotation
View(anno)
View(my_annotation)
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss1 )
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
f1 <- function(x){
if(isTRUE(any(x>5|x< -5))){
return(1)
}else{return(0)}
}
med <- apply(sdss,1,f1)
sdss1 <- sdss[med == 1,]
dim(sdss1)
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss )
View(my_annotation)
dim(anno)
dim(my_annotation)
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
sdss1 <- read.csv("sDSS_filtered.Drugs_451.csv", stringsAsFactors = F, row.names = 1)
annotation <- read.csv("patient_annotation.csv", stringsAsFactors = F, row.names = 1)
dia <- (annotation$Disease_status == "Diagnosis" )
annotation <- annotation[dia,]
samples <- sort(intersect(colnames(sdss1), rownames(annotation)))
sdss1 <- sdss[, samples]
dim(sdss1)
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
sdss1 <- read.csv("sDSS_filtered.Drugs_451.csv", stringsAsFactors = F, row.names = 1)
annotation <- read.csv("patient_annotation.csv", stringsAsFactors = F, row.names = 1)
dia <- (annotation$Disease_status == "Diagnosis" )
annotation <- annotation[dia,]
samples <- sort(intersect(colnames(sdss1), rownames(annotation)))
sdss1 <- sdss[, samples]
dim(sdss1)
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
f1 <- function(x){
if(isTRUE(any(x>5|x< -5))){
return(1)
}else{return(0)}
}
med <- apply(sdss,1,f1)
sdss1 <- sdss[med == 1,]
dim(sdss1)
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss )
head(my_annotation)
dim(my_annotation)
annotation <- read.csv("patient_annotation.csv", stringsAsFactors = F, row.names = 1)
dia <- (annotation$Disease_status == "Diagnosis" )
annotation <- annotation[dia,]
samples <- sort(intersect(colnames(sdss1), rownames(annotation)))
sdss1 <- sdss[, samples]
samples <- sort(intersect(colnames(sdss1), rownames(annotation)))
sdss1 <- sdss1[, samples]
dim(sdss1)
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
f1 <- function(x){
if(isTRUE(any(x>5|x< -5))){
return(1)
}else{return(0)}
}
med <- apply(sdss,1,f1)
sdss1 <- sdss[med == 1,]
dim(sdss1)
annotations <- read.csv("patient_annotation.csv", row.names = 1)
annotations <- annotations$Disease_status == "Diagnosis"
dim(annotations)
samples <- sort(intersect(sdss1), rownames(annotations))
samples <- sort(intersect(colanems(sdss1), rownames(annotations)))
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
f1 <- function(x){
if(isTRUE(any(x>5|x< -5))){
return(1)
}else{return(0)}
}
med <- apply(sdss,1,f1)
sdss1 <- sdss[med == 1,]
dim(sdss1)
annotations <- read.csv("patient_annotation.csv", row.names = 1)
annotations <- annotations$Disease_status == "Diagnosis"
annotations
annotations <- annotations[, annotations]
annotations <- annotations[ annotations, ]
dia <- annotations$Disease_status == "Diagnosis"
annotations <- read.csv("patient_annotation.csv", row.names = 1)
dia <- annotations$Disease_status == "Diagnosis"
annotations <- annotations[ dia, ]
rownames
rownames(annotations)
sort(intersect(colnames(sdss1), rownames(annotations)))
samples <- sort(intersect(colnames(sdss1), rownames(annotations)))
sdss1 <- sdss1[, samples]
dim(sdss1)
cor2 <- rcorr(as.matrix(t(sdss1)), type="pearson")
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss )
my_ann_colors = list(
Drug_classes = c("X. Other" = "#F781F3",
"B. Kinase inhibitor" = "#585858",
"A. Conv. Chemo" = "#04B404",
"D. Immunomodulatory" = "#FF8000",
"E. Differentiating/ epigenetic modifier" = "#0B610B",
"H. Metabolic modifier" = "#FFBF00",
"F. Hormone therapy" = "#FF0000",
"J. NSAID" = "#5F4C0B",
"C. Rapalog" = "#0000FF",
"G. Apoptotic modulator" = "#8A0808",
"K. HSP inhibitor" = "#00BFFF",
"I. Kinesin inhibitor" = "#81F7F3"))
minval <- -1;
maxval <- 1;
pairs.breaks <- c(seq(minval, maxval, length.out=257))
pheatmap(cor2$r, fontsize = 8,
color = colorRampPalette(c("blue", "white" ,"red"))(256),
breaks = pairs.breaks,
annotation_col = my_annotation,
annotation_row = my_annotation,
annotation_colors = my_ann_colors,
border_color = NA,
lustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
filename = "diagnosis 51S_sdss_pheatmap_complete.pdf", height = 40, width = 40)
dim(sdss1)
annotations <- read.csv("patient_annotation.csv", row.names = 1)
dia <- annotations$Disease_status != "Diagnosis"
annotations <- annotations[ dia, ]
samples <- sort(intersect(colnames(sdss1), rownames(annotations)))
sdss1 <- sdss1[, samples]
dim(sdss1)
annotations <- read.csv("patient_annotation.csv", row.names = 1)
dia <- annotations$Disease_status != "Diagnosis"
dia
annotations <- annotations[ dia, ]
annotations
dim(annotations)
samples <- sort(intersect(colnames(sdss1), rownames(annotations)))
samples
rm(list=ls())
library(pheatmap)
library(Hmisc)
library(corrplot)
library(RColorBrewer)
setwd("~/Dropbox/Shared/AML_data_2017/CorMap and heatmap/")
sdss <- read.csv("sDSS.csv", stringsAsFactors = F, row.names = 1)
f1 <- function(x){
if(isTRUE(any(x>5|x< -5))){
return(1)
}else{return(0)}
}
med <- apply(sdss,1,f1)
sdss1 <- sdss[med == 1,]
dim(sdss1)
annotations <- read.csv("patient_annotation.csv", row.names = 1)
dia <- annotations$Disease_status != "Diagnosis"
annotations <- annotations[ dia, ]
samples <- sort(intersect(colnames(sdss1), rownames(annotations)))
sdss1 <- sdss1[, samples]
dim(sdss1)
cor2 <- rcorr(as.matrix(t(sdss1)), type="pearson")
anno <- read.csv("drug_annotation.csv", stringsAsFactors = F)
my_annotation <- data.frame(Drug_classes = anno$Class.explained)
rownames( my_annotation ) <- rownames( sdss )
my_ann_colors = list(
Drug_classes = c("X. Other" = "#F781F3",
"B. Kinase inhibitor" = "#585858",
"A. Conv. Chemo" = "#04B404",
"D. Immunomodulatory" = "#FF8000",
"E. Differentiating/ epigenetic modifier" = "#0B610B",
"H. Metabolic modifier" = "#FFBF00",
"F. Hormone therapy" = "#FF0000",
"J. NSAID" = "#5F4C0B",
"C. Rapalog" = "#0000FF",
"G. Apoptotic modulator" = "#8A0808",
"K. HSP inhibitor" = "#00BFFF",
"I. Kinesin inhibitor" = "#81F7F3"))
minval <- -1;
maxval <- 1;
pairs.breaks <- c(seq(minval, maxval, length.out=257))
pheatmap(cor2$r, fontsize = 8,
color = colorRampPalette(c("blue", "white" ,"red"))(256),
breaks = pairs.breaks,
annotation_col = my_annotation,
annotation_row = my_annotation,
annotation_colors = my_ann_colors,
border_color = NA,
lustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
filename = " Rel_ref_74S_sdss_pheatmap_complete.pdf", height = 40, width = 40)
suppressPackageStartupMessages({
library( tidyverse )
library( beeswarm )
})
setwd("~/Dropbox/Shared/AML_data_2017/drug_mutation/")
rm(list=ls())
suppressPackageStartupMessages({
library( tidyverse )
library( beeswarm )
})
setwd("~/Dropbox/Shared/AML_data_2017/drug_mutation/")
sdss <- as.matrix( read.csv( "sDSS_104S.csv", row.names=1)  )
sdss[ 1:5, 1:5 ]
mut_raw <- as.matrix( read.csv( "mutation_matrix_pappa.csv", row.names = 1 ))
mut <-  t(mut_raw)
mut[ 1:5, 1:5 ]
table(as.vector(mut))
mut_fac <- mut
mut <- mut != "0"
mut[ 1:5, 1:5 ]
samples <- sort(intersect(colnames(mut), colnames(sdss)))
mut <- mut[, samples]
sdss <- sdss[, samples]
stopifnot( colnames(mut) == colnames(sdss) )
stopifnot( colnames(sdss) == colnames(mut) )
drug <- "Dexamethasone"
gene <- "FLT3"
wilcox.test( sdss[drug,] ~ mut[gene,] )
gene
mut[gene,]
sdss[drug,]
plot(sdss[drug,], mut[gene,])
mut_raw <- as.matrix( read.csv( "mutation_matrix_pappa.csv", row.names = 1 ))
mut <-  t(mut_raw)
mut[ 1:5, 1:5 ]
dim(mut_raw)
dim(sdss)
suppressPackageStartupMessages({
library( tidyverse )
library( beeswarm )
})
setwd("~/Dropbox/Shared/AML_data_2017/drug_mutation/")
suppressPackageStartupMessages({
library( tidyverse )
library( beeswarm )
})
setwd("~/Dropbox/Shared/AML_data_2017/drug_mutation/")
sdss <- as.matrix( read.csv( "sDSS_104S.csv", row.names=1)  )
sdss[ 1:5, 1:5 ]
mut_raw <- as.matrix( read.csv( "mutation_matrix_pappa.csv", row.names = 1 ))
mut <-  t(mut_raw)
mut[ 1:5, 1:5 ]
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
setwd("~/Desktop/IODS-project/data")
setwd("~/Desktop/IODS-project/data")
setwd("~/Desktop/IODS-project/data")
math <- read.table("student-mat.csv", sep = ";" , header=TRUE)
por <- read.table("student-por.csv", sep =";", header = TRUE)
dim(por)
dim(math)
dim(math)
str(math)
str(math)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
dim(math_por)
str(math_por)
colnames(math_por)
glimpse(math_por)
colnames(math_por)
colnames(math_por)
alc <- select(math_por, one_of(join_by))
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(math, por, by = join_by, suffix = c(".math", ".por"))
dim(math_por)
str(math_por)
dim(math_por)
str(math_por)
glimpse(math_por)
colnames(math_por)
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
notjoined_columns
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
alc <- select(math_por, one_of(join_by))
notjoined_columns <- colnames(file1)[!colnames(file1) %in% join_by]
notjoined_columns <- colnames(math)[!colnames(math) %in% join_by]
for(column_name in notjoined_columns) {
# select two columns from 'math_por' with the same original name
two_columns <- select(math_por, starts_with(column_name))
# select the first column vector of those two columns
first_column <- select(two_columns, 1)[[1]]
# if that first column vector is numeric...
if(is.numeric(first_column)) {
# take a rounded average of each row of the two columns and
# add the resulting vector to the alc data frame
alc[column_name] <- round(rowMeans(two_columns))
} else { # else if it's not numeric...
# add the first column vector to the alc data frame
alc[column_name] <- first_column
}
}
file1 = read.table("student-mat.csv", sep = ";" , header=TRUE)
file2 = read.table("student-por.csv", sep =";", header = TRUE)
str(file1)
str(file2)
dim(file1)
dim(file2)
library(dplyr)
join_by <- c("school","sex","age","address","famsize","Pstatus","Medu","Fedu","Mjob","Fjob","reason","nursery","internet")
math_por <- inner_join(file1, file2, by =join_by, suffix = c(".math", ".por"))
alc <- select(math_por, one_of(join_by))
str(math_por)
dim(math_por)
str(alc)
dim(alc)
alc <- select(math_por, one_of(join_by))
library(dplyr)
alc <- select(math_por, one_of(join_by))
